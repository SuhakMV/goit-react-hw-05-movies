{"version":3,"file":"static/js/779.78faa081.chunk.js","mappings":"kRAIMA,EAAW,sCAEXC,EAAU,mCAGHC,EAAgB,WAC3B,OAAOC,EAAAA,GAAAA,IAAA,UAPY,mDAOZ,oBACsBF,EADtB,gCAHI,KAMZ,EAEYG,EAAc,SAACC,GAC1B,OAAOF,EAAAA,GAAAA,IAAA,UAdU,4CAcV,oBACoBF,EADpB,iCACoDI,EADpD,iBATI,IASJ,wBAGR,EAEYC,EAAoB,SAACC,GAChC,OAAOJ,EAAAA,GAAAA,IAAA,UACFH,GADE,OACSO,EADT,oBAC4BN,EAD5B,mBAGR,EAEYO,EAAY,SAACD,GACxB,OAAOJ,EAAAA,GAAAA,IAAA,UACFH,GADE,OACSO,EADT,4BACoCN,GAE5C,EAEYQ,EAAe,SAACF,GAC3B,OAAOJ,EAAAA,GAAAA,IAAA,UACFH,GADE,OACSO,EADT,4BACoCN,EADpC,gCA3BI,KA8BZ,C,8JCnCYS,EAAOC,EAAAA,GAAAA,GAAH,8FAMJC,EAAWD,EAAAA,GAAAA,GAAH,mDAIRE,EAAOF,EAAAA,GAAAA,EAAH,2J,SC4BjB,EAnCgB,WACd,IAAQJ,GAAYO,EAAAA,EAAAA,MAAZP,QACR,GAA8BQ,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCAId,gHAE2BT,EAAAA,EAAAA,IAAaF,GAFxC,gBAEYY,EAFZ,EAEYA,KACRF,EAAWE,EAAKC,SAHpB,gDAKI,KAAM,SALV,0DAJc,sBACE,KAAZb,GADU,mCAYdc,EACD,GAAE,CAACd,KAGF,SAACG,EAAD,UACsB,IAAnBM,EAAQM,QACP,SAACT,EAAD,wDAEAG,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,UAACd,EAAD,YACE,UAACC,EAAD,sBAAeY,MACf,SAACZ,EAAD,UAAOa,MAFMF,EADL,KASnB,C","sources":["api/api.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst SEARCH_URL = 'https://api.themoviedb.org/3/search/movie';\nconst TRENDING_URL = 'https://api.themoviedb.org/3/trending/movie/week';\nconst ADIT_URL = 'https://api.themoviedb.org/3/movie/';\n\nconst API_KEY = '861782ee1fc6aacf939bc06e51306075';\nconst page = '1';\n\nexport const fetchTrending = () => {\n  return axios.get(\n    `${TRENDING_URL}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n};\n\nexport const fetchMovies = (query) => {\n  return axios.get(\n    `${SEARCH_URL}?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`\n  );\n};\n\nexport const fetchMovieDetails = (movieId) => {\n  return axios.get(\n    `${ADIT_URL}${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n};\n\nexport const fetchCast = (movieId) => {\n  return axios.get(\n    `${ADIT_URL}${movieId}/credits?api_key=${API_KEY}`\n  );\n};\n\nexport const fetchReviews = (movieId) => {\n  return axios.get(\n    `${ADIT_URL}${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n};","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 0 0 0 50px;\n  list-style-type: disc;\n  font-size: 20px;\n`;\n\nexport const ListItem = styled.li`\n  padding: 15px 0 15px 0;\n`;\n\nexport const Text = styled.p`\n  margin: 0;\n  line-height: 1.4;\n  \n  :first-child {\n    font-size: 22px;\n    font-weight: 700;\n    padding-bottom: 5px;\n}\n`;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'api/api';\nimport { List, ListItem, Text } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    if (movieId === '') {\n      return;\n    }\n    async function getReviews() {\n      try {\n        const { data } = await fetchReviews(movieId);\n        setReviews(data.results);\n      } catch (error) {\n        error('error');\n      }\n    }\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <List>\n      {reviews.length === 0 ? (\n        <Text>We don't have any reviews for this movie.</Text>\n      ) : (\n        reviews.map(({ id, author, content }) => (\n          <ListItem key={id}>\n            <Text>Author: {author}</Text>\n            <Text>{content}</Text>\n          </ListItem>\n        ))\n      )}\n    </List>\n  );\n};\n\nexport default Reviews;\n"],"names":["ADIT_URL","API_KEY","fetchTrending","axios","fetchMovies","query","fetchMovieDetails","movieId","fetchCast","fetchReviews","List","styled","ListItem","Text","useParams","useState","reviews","setReviews","useEffect","data","results","getReviews","length","map","id","author","content"],"sourceRoot":""}