{"version":3,"file":"static/js/199.430bb029.chunk.js","mappings":"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","sources":["api/api.js","components/App.styled.js","components/MovieList/MovieList.styled.js","components/Button/Button.jsx","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import axios from 'axios';\n\nconst SEARCH_URL = 'https://api.themoviedb.org/3/search/movie';\nconst TRENDING_URL = 'https://api.themoviedb.org/3/trending/movie/week';\nconst ADIT_URL = 'https://api.themoviedb.org/3/movie/';\n\nconst API_KEY = '861782ee1fc6aacf939bc06e51306075';\n\n\nexport const fetchTrending = page => {\n  return axios.get(\n    `${TRENDING_URL}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n};\n\nexport const fetchMovies = (query, page) => {\n  return axios.get(\n    `${SEARCH_URL}?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`\n  );\n};\n\nexport const fetchMovieDetails = (movieId) => {\n  return axios.get(\n    `${ADIT_URL}${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n};\n\nexport const fetchCast = (movieId) => {\n  return axios.get(\n    `${ADIT_URL}${movieId}/credits?api_key=${API_KEY}`\n  );\n};\n\nexport const fetchReviews = (movieId) => {\n  return axios.get(\n    `${ADIT_URL}${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n};","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  padding: 0 10px;\n  margin: 10px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Title = styled.h1`\n  font-size: 30px;\n  display: flex;\n  text-transform: uppercase;\n  margin: 20px auto;\n  align-items: center;\n  justify-content: center;\n  :before {\n    content: '\\u2606'' ';\n  }\n  :after {\n    content: '\\u2606'' ';\n  }\n`;\n\nexport const MovieBox = styled.div`\n  padding: 0 10px;\n  margin: 10px 0;\n`;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: grid;\n  max-width: calc(100vw - 20px);\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  grid-gap: 20px;\n  font-size: 15px;\n  font-weight: 600;\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  width: 300px;\n  height: auto;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  display: flex;\n  flex-direction: column;\n  border-radius: 5px;\n`;\n\nexport const BoxText = styled.div`\n  align-items: center;\n`\n\nexport const Text = styled.p`\n  padding: 20px 15px;\n  font-size: 15px;\n  margin: 0;\n`;","import PropTypes from 'prop-types';\nimport './Button.styles.css';\n\nexport default function Button(props) {\n  return (\n    <button className=\"Button\" type=\"button\" onClick={props.onClick}>\n      Load more\n    </button>\n  );\n}\n\nButton.protoType = {\n  onClick: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { Box } from 'components/App.styled';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { BoxText, List, ListItem, Text } from './MovieList.styled';\nimport Button from 'components/Button/Button';\n\nconst MovieList = ({ movies, onLoadMore }) => {\n  const location = useLocation();\n\n\n  \n\n  return (\n    <Box>\n      <List>\n        {movies.map(({id, title, poster_path, release_date }) => {\n          return (\n            <ListItem key={id}>\n              <NavLink to={`/movies/${id}`} state={{ from: location }}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n                  alt={title}\n                />\n                <BoxText>\n                  <Text>\n                    {title} ({release_date.substr(0, 4)})\n                  </Text>\n                </BoxText>\n              </NavLink>\n            </ListItem>\n          );\n        })}\n      </List>\n      <Button onClick={onLoadMore}/>\n    </Box>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  width: 100%;\n  font-size: 15px;\n  padding: 5px;\n  border-radius: 5px;\n`;\n\nexport const Button = styled.button`\n  font-size: 15px;\n  padding: 5px 15px 5px 15px;\n  border-radius: 5px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  width: 100%;\n  max-width: 500px;\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { Button, Form, Input } from './SearchForm.styled';\nimport { Box } from 'components/App.styled';\n\nconst SearchForm = props => {\n  const [query, setQuery] = useState('');\n\n  const handleInputChange = event => {\n    setQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (query.trim() === '') {\n      toast.error('Please enter text in the search bar!');\n      return;\n    }\n\n    props.onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <Box>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          value={query}\n          onChange={handleInputChange}\n        />\n        <Button type=\"submit\">\n          <span>Search</span>\n        </Button>\n      </Form>\n    </Box>\n  );\n};\n\nSearchForm.protoType = {\n  onSubmit: PropTypes.func,\n};\n\nexport default SearchForm;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport MovieList from 'components/MovieList/MovieList';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { fetchMovies } from 'api/api';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Movies = () => {\n  const [films, setFilms] = useState([]);\n  const [page, setPage] = useState(1);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n    if (query === '') {\n      return;\n    }\n    async function getMovies() {\n      try {\n        const { data } = await fetchMovies(query, page);\n        if (!data.total_results) {\n          toast.error('Nothing found!');\n        }\n        page === 1\n          ? setFilms(data.results)\n          : setFilms(prevFilms => [...prevFilms, ...data.results]);\n      } catch (error) {\n        error('error');\n      }\n    }\n    getMovies();\n  }, [searchParams, page]);\n\n  const handleSubmit = query => {\n    setSearchParams(query !== '' ? { query } : {});\n  };\n\n  const handleOnLoadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  return (\n    <div>\n      <SearchForm onSubmit={handleSubmit} />\n      {films.length > 0 && (\n        <MovieList movies={films} onLoadMore={handleOnLoadMore} />\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["ADIT_URL","API_KEY","fetchTrending","page","axios","fetchMovies","query","fetchMovieDetails","movieId","fetchCast","fetchReviews","Box","styled","Title","MovieBox","List","ListItem","BoxText","Text","Button","props","className","type","onClick","protoType","PropTypes","movies","onLoadMore","location","useLocation","map","id","title","poster_path","release_date","to","state","from","src","alt","substr","Input","Form","SearchForm","useState","setQuery","onSubmit","event","preventDefault","trim","toast","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","films","setFilms","setPage","useSearchParams","searchParams","setSearchParams","useEffect","get","data","total_results","results","prevFilms","getMovies","length","MovieList","prevPage","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","componentName","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}