{"version":3,"file":"static/js/387.d44a84b2.chunk.js","mappings":"kRAIMA,EAAW,sCAEXC,EAAU,mCAGHC,EAAgB,WAC3B,OAAOC,EAAAA,GAAAA,IAAA,UAPY,mDAOZ,oBACsBF,EADtB,gCAHI,KAMZ,EAEYG,EAAc,SAACC,GAC1B,OAAOF,EAAAA,GAAAA,IAAA,UAdU,4CAcV,oBACoBF,EADpB,iCACoDI,EADpD,iBATI,IASJ,wBAGR,EAEYC,EAAoB,SAACC,GAChC,OAAOJ,EAAAA,GAAAA,IAAA,UACFH,GADE,OACSO,EADT,oBAC4BN,EAD5B,mBAGR,EAEYO,EAAY,SAACD,GACxB,OAAOJ,EAAAA,GAAAA,IAAA,UACFH,GADE,OACSO,EADT,4BACoCN,GAE5C,EAEYQ,EAAe,SAACF,GAC3B,OAAOJ,EAAAA,GAAAA,IAAA,UACFH,GADE,OACSO,EADT,4BACoCN,EADpC,gCA3BI,KA8BZ,C,8JCnCYS,EAAOC,EAAAA,GAAAA,GAAH,+NAUJC,EAAWD,EAAAA,GAAAA,GAAH,+KASRE,EAAUF,EAAAA,GAAAA,EAAH,gJ,SC8BpB,EA7Ca,WACX,IAAQJ,GAAYO,EAAAA,EAAAA,MAAZP,QACR,GAAwBQ,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCAId,gHAE2BV,EAAAA,EAAAA,GAAUD,GAFrC,gBAEYY,EAFZ,EAEYA,KACRF,EAAQE,EAAKH,MAHjB,gDAKI,KAAM,SALV,0DAJc,sBACE,KAAZT,GADU,mCAYda,EACD,GAAE,CAACb,KAGF,SAACG,EAAD,UACGM,EAAKK,KAAI,YAA4D,IAAzDC,EAAwD,EAAxDA,GAAIC,EAAoD,EAApDA,aAAcC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,eAC9C,OACE,UAACd,EAAD,YACE,gBACEe,IACEJ,EAAY,0CAC2BA,GAD3B,wFAIdK,IAAKF,KAEP,4BACE,SAACb,EAAD,UAAUW,KACV,UAACX,EAAD,0BACa,0BAAOY,YAZTH,EAiBlB,KAGN,C","sources":["api/api.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst SEARCH_URL = 'https://api.themoviedb.org/3/search/movie';\nconst TRENDING_URL = 'https://api.themoviedb.org/3/trending/movie/week';\nconst ADIT_URL = 'https://api.themoviedb.org/3/movie/';\n\nconst API_KEY = '861782ee1fc6aacf939bc06e51306075';\nconst page = '1';\n\nexport const fetchTrending = () => {\n  return axios.get(\n    `${TRENDING_URL}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n};\n\nexport const fetchMovies = (query) => {\n  return axios.get(\n    `${SEARCH_URL}?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`\n  );\n};\n\nexport const fetchMovieDetails = (movieId) => {\n  return axios.get(\n    `${ADIT_URL}${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n};\n\nexport const fetchCast = (movieId) => {\n  return axios.get(\n    `${ADIT_URL}${movieId}/credits?api_key=${API_KEY}`\n  );\n};\n\nexport const fetchReviews = (movieId) => {\n  return axios.get(\n    `${ADIT_URL}${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n};","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 20px;\n  padding: 30px 25px;\n  margin: 0 auto;\n`;\n\nexport const ListItem = styled.li`\n  width: 200px;\n  height: auto;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  display: flex;\n  flex-direction: column;\n  border-radius: 5px;\n`;\n\nexport const BoxText = styled.p`\n  padding: 10px;\n  font-size: 15px;\n  margin: 0;\n  :first-child {\n    font-weight: 700;\n    padding-bottom: 0;\n}\n`;","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'api/api';\nimport { BoxText, List, ListItem } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    if (movieId === '') {\n      return;\n    }\n    async function getCast() {\n      try {\n        const { data } = await fetchCast(movieId);\n        setCast(data.cast);\n      } catch (error) {\n        error('error');\n      }\n    }\n    getCast();\n  }, [movieId]);\n\n  return (\n    <List>\n      {cast.map(({ id, profile_path, name, character, original_title }) => {\n        return (\n          <ListItem key={id}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n                  : `https://thesource.sa.ua.edu/wp-content/uploads/sites/57/2019/08/no-person-200x300.png`\n              }\n              alt={original_title}\n            />\n            <div>\n              <BoxText>{name}</BoxText>\n              <BoxText>\n                Character: <span>{character}</span>\n              </BoxText>\n            </div>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default Cast;\n\nCast.propTypes = {\n  getCast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      character: PropTypes.string.isRequired,\n      profile_path: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    })\n  ),\n};\n"],"names":["ADIT_URL","API_KEY","fetchTrending","axios","fetchMovies","query","fetchMovieDetails","movieId","fetchCast","fetchReviews","List","styled","ListItem","BoxText","useParams","useState","cast","setCast","useEffect","data","getCast","map","id","profile_path","name","character","original_title","src","alt"],"sourceRoot":""}