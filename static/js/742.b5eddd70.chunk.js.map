{"version":3,"file":"static/js/742.b5eddd70.chunk.js","mappings":"4OAGaA,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OAAO,SAAC,KAAD,CAAYD,GAAIA,EAAhB,SAAqBC,GAC7B,E,SCHYC,EAAc,WAAO,IAAD,IAEzBC,EAAI,qBADOC,EAAAA,EAAAA,MACKC,aAAZ,aAAG,EAAgBF,YAAnB,QAA2B,IACrC,OACE,4BACE,qDACA,2BACE,yBACE,SAAC,KAAD,CAAMH,GAAG,OAAOK,MAAO,CAAEF,KAAAA,GAAzB,qBAIF,yBACE,SAAC,KAAD,CAAMH,GAAG,UAAUK,MAAO,CAAEF,KAAAA,GAA5B,4BAOT,ECoCD,EAjDqB,WAAO,IAAD,IACjBG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAA4BN,EAAAA,EAAAA,UAAS,IAArC,eAAOO,EAAP,KAAeC,EAAf,KAEMC,EAAY,qBADDb,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBF,YAAnB,QAA2B,IAoB7C,OAdAe,EAAAA,EAAAA,YAAU,WACQ,KAAZZ,GAGJa,EAAAA,GAAAA,IAAA,UApBa,uCAoBb,OACqBb,EADrB,oBAnBY,mCAmBZ,oBAEGc,MAAK,SAAAC,GACJX,EAASW,EAASC,MAClBV,EAAUS,EAASC,KAAKX,OAAOY,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,OAC7DZ,EAAQ,IAAIa,KAAJ,UAAYN,EAASC,KAAKM,eAAgBC,eAClDb,EAAUK,EAASC,KAAKQ,YACzB,GACJ,GAAE,CAACxB,KAGF,+BACE,4BACE,4BACE,SAACP,EAAD,CAAUC,GAAIiB,EAAd,sBACA,gBAAKc,IAAG,UAtBE,mCAsBF,OAAiBhB,GAAUiB,IAAI,SAEzC,4BACE,0BAAKvB,EAAMwB,eAAX,KAA6BpB,EAA7B,QACA,wCAAgBqB,KAAKC,MAA2B,GAArB1B,EAAM2B,cAAjC,QACA,sCACA,uBAAI3B,EAAM4B,YACV,oCACA,uBAAI1B,QAEN,SAACT,EAAD,KACA,SAAC,KAAD,QAIP,C","sources":["components/BackLink.jsx","components/Aditchional/Aditchional.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import { StyledLink } from './App.styled';\n\n\nexport const BackLink = ({ to, children }) => {\n  return <StyledLink to={to}>{children}</StyledLink>;\n};\n","import { Link, useLocation } from 'react-router-dom';\n\nexport const Aditchional = () => {\n  const location = useLocation();\n  const from = location.state?.from ?? '/';\n  return (\n    <div>\n      <h2>Aditchional information</h2>\n      <ul>\n        <li>\n          <Link to=\"cast\" state={{ from }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from }}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { BackLink } from 'components/BackLink';\nimport { Aditchional } from 'components/Aditchional/Aditchional';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/movie/';\nconst API_KEY = '861782ee1fc6aacf939bc06e51306075';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const [genres, setGenres] = useState('');\n  const [date, setDate] = useState('')\n  const [poster, setPoster] = useState('');\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  //const from = location.state?.from ?? '/';\n  //console.log(movie.poster_path);\n  const posterURL = 'https://image.tmdb.org/t/p/w500';\n  \n\n  useEffect(() => {\n    if (movieId === '') {\n      return;\n    }\n    axios\n      .get(`${BASE_URL}${movieId}?api_key=${API_KEY}&language=en-US`)\n      .then(response => {\n        setMovie(response.data);\n        setGenres(response.data.genres.map(genre => genre.name).join(', '));\n        setDate(new Date(`${response.data.release_date}`).getFullYear());\n        setPoster(response.data.poster_path);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      <div>\n        <div>\n          <BackLink to={backLinkHref}>Go back</BackLink>\n          <img src={`${posterURL}${poster}`} alt=\"\" />\n        </div>\n        <div>\n          <h2>{movie.original_title} ({date})</h2>\n          <p>User Score: {Math.round(movie.vote_average * 10)}%</p>\n          <h3>Overview</h3>\n          <p>{movie.overview}</p>\n          <h2>Genres</h2>\n          <p>{genres}</p>\n        </div>\n        <Aditchional />\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BackLink","to","children","Aditchional","from","useLocation","state","movieId","useParams","useState","movie","setMovie","genres","setGenres","date","setDate","poster","setPoster","backLinkHref","useEffect","axios","then","response","data","map","genre","name","join","Date","release_date","getFullYear","poster_path","src","alt","original_title","Math","round","vote_average","overview"],"sourceRoot":""}